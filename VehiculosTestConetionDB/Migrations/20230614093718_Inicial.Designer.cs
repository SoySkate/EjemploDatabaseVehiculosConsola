// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VehiculosTestConetionDB;

#nullable disable

namespace VehiculosTestConetionDB.Migrations
{
    [DbContext(typeof(VehiculosContexto))]
    [Migration("20230614093718_Inicial")]
    partial class Inicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("VehiculosTestConetionDB.Models.Avion", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("Color")
                        .HasColumnType("int");

                    b.Property<int>("MaxPersonas")
                        .HasColumnType("int");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MotorID")
                        .HasColumnType("int");

                    b.Property<int>("NumRuedas")
                        .HasColumnType("int");

                    b.Property<string>("NumVIN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TopSpeed")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("MotorID");

                    b.ToTable("Aviones");
                });

            modelBuilder.Entity("VehiculosTestConetionDB.Models.Coche", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("Color")
                        .HasColumnType("int");

                    b.Property<int>("MaxPersonas")
                        .HasColumnType("int");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MotorID")
                        .HasColumnType("int");

                    b.Property<int>("NumRuedas")
                        .HasColumnType("int");

                    b.Property<string>("NumVIN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TopSpeed")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("MotorID");

                    b.ToTable("Coches");
                });

            modelBuilder.Entity("VehiculosTestConetionDB.Models.Motor", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<double>("Cilindrada")
                        .HasColumnType("float");

                    b.Property<double>("HorsePowerHP")
                        .HasColumnType("float");

                    b.Property<int>("TipoMotor")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Motor");
                });

            modelBuilder.Entity("VehiculosTestConetionDB.Models.Yate", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("Color")
                        .HasColumnType("int");

                    b.Property<int>("MaxPersonas")
                        .HasColumnType("int");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MotorID")
                        .HasColumnType("int");

                    b.Property<string>("NumVIN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TopSpeed")
                        .HasColumnType("int");

                    b.Property<int>("Valoracion")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("MotorID");

                    b.ToTable("Yates");
                });

            modelBuilder.Entity("VehiculosTestConetionDB.Models.Avion", b =>
                {
                    b.HasOne("VehiculosTestConetionDB.Models.Motor", "Motor")
                        .WithMany()
                        .HasForeignKey("MotorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Motor");
                });

            modelBuilder.Entity("VehiculosTestConetionDB.Models.Coche", b =>
                {
                    b.HasOne("VehiculosTestConetionDB.Models.Motor", "Motor")
                        .WithMany()
                        .HasForeignKey("MotorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Motor");
                });

            modelBuilder.Entity("VehiculosTestConetionDB.Models.Yate", b =>
                {
                    b.HasOne("VehiculosTestConetionDB.Models.Motor", "Motor")
                        .WithMany()
                        .HasForeignKey("MotorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Motor");
                });
#pragma warning restore 612, 618
        }
    }
}
